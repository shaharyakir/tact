;;
;; Header files for IncrementContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Increment$_load
(slice, ((int, int))) $Increment$_load(slice sc_0) inline;

;; $Toggle$_load
(slice, ((int))) $Toggle$_load(slice sc_0) inline;

;; $Persist$_load
(slice, ((int, cell))) $Persist$_load(slice sc_0) inline;

;; $Reset$_load
(slice, ((int))) $Reset$_load(slice sc_0) inline;

;; $Something$_store
builder $Something$_store(builder build_0, (int) v) inline;

;; $Something$_store_cell
cell $Something$_store_cell((int) v) inline;

;; $Something$_not_null
((int)) $Something$_not_null(tuple v) inline;

;; $Something$_store_opt
cell $Something$_store_opt(tuple v) inline;

;; $IncrementContract$_store
builder $IncrementContract$_store(builder build_0, (cell, cell, cell, cell, cell) v) inline;

;; $IncrementContract$_load
(slice, ((cell, cell, cell, cell, cell))) $IncrementContract$_load(slice sc_0) inline;

;; $IncrementContract$_contract_init
(cell, cell, cell, cell, cell) $IncrementContract$_contract_init() impure inline_ref;

;; $IncrementContract$_contract_load
(cell, cell, cell, cell, cell) $IncrementContract$_contract_load() impure inline_ref;

;; $IncrementContract$_contract_store
() $IncrementContract$_contract_store((cell, cell, cell, cell, cell) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $global_reply
() $global_reply(cell $body) impure inline;

;; $IncrementContract$_fun_counters
((cell, cell, cell, cell, cell), cell) $IncrementContract$_fun_counters((cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $IncrementContract$_fun_counters2
((cell, cell, cell, cell, cell), cell) $IncrementContract$_fun_counters2((cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
