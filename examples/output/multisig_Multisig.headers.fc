;;
;; Header files for Multisig
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Request$_store
builder $Request$_store(builder build_0, (slice, slice, int, int, int, int, cell) v) inline_ref;

;; $Request$_load
(slice, ((slice, slice, int, int, int, int, cell))) $Request$_load(slice sc_0) inline_ref;

;; $Signed$_load
(slice, (((slice, slice, int, int, int, int, cell)))) $Signed$_load(slice sc_0) inline;

;; $Multisig$_store
builder $Multisig$_store(builder build_0, (int, cell, int, int) v) inline;

;; $Multisig$_load
(slice, ((int, cell, int, int))) $Multisig$_load(slice sc_0) inline;

;; $MultisigSigner$init$_store
builder $MultisigSigner$init$_store(builder build_0, (slice, cell, int, (slice, slice, int, int, int, int, cell)) v) inline;

;; $Multisig$init$_load
(slice, ((cell, int, int))) $Multisig$init$_load(slice sc_0) inline;

;; $Multisig$_contract_init
(int, cell, int, int) $Multisig$_contract_init(cell $members, int $totalWeight, int $requiredWeight) impure inline_ref;

;; $Multisig$_contract_load
(int, cell, int, int) $Multisig$_contract_load() impure inline_ref;

;; $Multisig$_contract_store
() $Multisig$_contract_store((int, cell, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $MultisigSigner$_init_child
(cell, cell) $MultisigSigner$_init_child(cell sys', slice $master, cell $members, int $requiredWeight, (slice, slice, int, int, int, int, cell) $request) inline_ref;

;; $Multisig$_fun_member
((int, cell, int, int), int) $Multisig$_fun_member((int, cell, int, int) $self, slice $address) impure inline_ref;

;; $Multisig$_fun_members
((int, cell, int, int), cell) $Multisig$_fun_members((int, cell, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_value_to_mode_bounce_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_bounce_code_data(int value, slice to, int mode, int bounce, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;
