#include "maps_MapTestContract.headers.fc";
#include "maps_MapTestContract.stdlib.fc";
#include "maps_MapTestContract.storage.fc";

;;
;; Contract MapTestContract functions
;;

(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_contract_init() impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = (null(), null(), null(), null(), null(), null(), null(), null(), null(), null());
    return ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap1((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'intMap1);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_intMap1Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_int_int($self'intMap1, 257, $key, 257));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap2((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'intMap2);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_intMap2Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_int_int($self'intMap2, 257, $key, 1));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap3((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'intMap3);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap3Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_int_cell($self'intMap3, 257, $key));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap4((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'intMap4);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), tuple) $MapTestContract$_fun_intMap4Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $SomeStruct$_load_opt(__tact_dict_get_int_cell($self'intMap4, 257, $key)));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_intMap5((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'intMap5);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), slice) $MapTestContract$_fun_intMap5Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_int_slice($self'intMap5, 257, $key));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap1((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'addrMap1);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_addrMap1Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_slice_int($self'addrMap1, 267, $key, 257));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap2((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'addrMap2);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_addrMap2Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_slice_int($self'addrMap2, 267, $key, 1));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap3((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'addrMap3);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap3Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_slice_cell($self'addrMap3, 267, $key));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap4((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'addrMap4);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), tuple) $MapTestContract$_fun_addrMap4Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $SomeStruct$_load_opt(__tact_dict_get_slice_cell($self'addrMap4, 267, $key)));
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), cell) $MapTestContract$_fun_addrMap5((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), $self'addrMap5);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), slice) $MapTestContract$_fun_addrMap5Value((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, slice $key) impure inline_ref {
    var (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5)) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), __tact_dict_get_slice_slice($self'addrMap5, 267, $key));
}

;;
;; Receivers of a Contract MapTestContract
;;

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) %$MapTestContract$_internal_empty((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetIntMap1((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (int, int) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'intMap1~__tact_dict_set_int_int(257, $msg'key, $msg'value, 257);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetIntMap2((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (int, int) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'intMap2~__tact_dict_set_int_int(257, $msg'key, $msg'value, 1);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetIntMap3((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (int, cell) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'intMap3~__tact_dict_set_int_cell(257, $msg'key, $msg'value);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetIntMap4((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (int, tuple) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'intMap4~__tact_dict_set_int_cell(257, $msg'key, $SomeStruct$_store_opt($msg'value));
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetIntMap5((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (int, slice) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'intMap5~__tact_dict_set_int_slice(257, $msg'key, $msg'value);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetAddrMap1((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (slice, int) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'addrMap1~__tact_dict_set_slice_int(267, $msg'key, $msg'value, 257);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetAddrMap2((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (slice, int) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'addrMap2~__tact_dict_set_slice_int(267, $msg'key, $msg'value, 1);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetAddrMap3((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (slice, cell) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'addrMap3~__tact_dict_set_slice_cell(267, $msg'key, $msg'value);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetAddrMap4((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (slice, tuple) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'addrMap4~__tact_dict_set_slice_cell(267, $msg'key, $SomeStruct$_store_opt($msg'value));
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)), ()) $MapTestContract$_internal_binary_SetAddrMap5((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, (slice, slice) $msg) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    var ($msg'key, $msg'value) = $msg;
    $self'addrMap5~__tact_dict_set_slice_slice(267, $msg'key, $msg'value);
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), ()) $MapTestContract$_internal_text_4aedba9b6dfe7cb8e0f95d1230cb0ac70b4bbbe6a3e991ae767cd363573daf1b((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline {
    var ($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5) = $self;
    $self'addrMap1 = null();
    $self'addrMap2 = null();
    $self'addrMap3 = null();
    $self'addrMap4 = null();
    $self'addrMap5 = null();
    $self'intMap1 = null();
    $self'intMap2 = null();
    $self'intMap3 = null();
    $self'intMap4 = null();
    $self'intMap5 = null();
    return (($self'intMap1, $self'intMap2, $self'intMap3, $self'intMap4, $self'intMap5, $self'addrMap1, $self'addrMap2, $self'addrMap3, $self'addrMap4, $self'addrMap5), ());
}

;;
;; Get methods of a Contract MapTestContract
;;

_ %intMap1() method_id(67207) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap1();
    return res;
}

_ %intMap1Value(int $$key) method_id(103396) {
    int $key = $$key;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap1Value($key);
    return res;
}

_ %intMap2() method_id(79588) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap2();
    return res;
}

_ %intMap2Value(int $$key) method_id(89348) {
    int $key = $$key;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap2Value($key);
    return res;
}

_ %intMap3() method_id(75461) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap3();
    return res;
}

_ %intMap3Value(int $$key) method_id(71844) {
    int $key = $$key;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap3Value($key);
    return res;
}

_ %intMap4() method_id(87586) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap4();
    return res;
}

_ %intMap4Value(int $$key) method_id(119013) {
    int $key = $$key;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap4Value($key);
    return $SomeStruct$_to_opt_external(res);
}

_ %intMap5() method_id(83459) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap5();
    return res;
}

_ %intMap5Value(int $$key) method_id(103749) {
    int $key = $$key;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_intMap5Value($key);
    return res;
}

_ %addrMap1() method_id(93537) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap1();
    return res;
}

_ %addrMap1Value(slice $$key) method_id(116148) {
    slice $key = __tact_verify_address($$key);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap1Value($key);
    return res;
}

_ %addrMap2() method_id(89346) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap2();
    return res;
}

_ %addrMap2Value(slice $$key) method_id(68436) {
    slice $key = __tact_verify_address($$key);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap2Value($key);
    return res;
}

_ %addrMap3() method_id(85283) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap3();
    return res;
}

_ %addrMap3Value(slice $$key) method_id(85748) {
    slice $key = __tact_verify_address($$key);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap3Value($key);
    return res;
}

_ %addrMap4() method_id(81348) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap4();
    return res;
}

_ %addrMap4Value(slice $$key) method_id(100021) {
    slice $key = __tact_verify_address($$key);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap4Value($key);
    return $SomeStruct$_to_opt_external(res);
}

_ %addrMap5() method_id(77285) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap5();
    return res;
}

_ %addrMap5Value(slice $$key) method_id(115477) {
    slice $key = __tact_verify_address($$key);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_addrMap5Value($key);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmePKwNBYFbu3Nev1htYrpcmLd3JQgkC72pUgEaqheiwyH";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract MapTestContract
;;

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_contract_router_internal((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    if (msg_bounced) {
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$MapTestContract$_internal_empty();
        return (self, true);
    }
    
    ;; Receive SetIntMap1 message
    if (op == 1510253336) {
        var msg = in_msg~$SetIntMap1$_load();
        self~$MapTestContract$_internal_binary_SetIntMap1(msg);
        return (self, true);
    }
    
    ;; Receive SetIntMap2 message
    if (op == 1629867766) {
        var msg = in_msg~$SetIntMap2$_load();
        self~$MapTestContract$_internal_binary_SetIntMap2(msg);
        return (self, true);
    }
    
    ;; Receive SetIntMap3 message
    if (op == 3613954633) {
        var msg = in_msg~$SetIntMap3$_load();
        self~$MapTestContract$_internal_binary_SetIntMap3(msg);
        return (self, true);
    }
    
    ;; Receive SetIntMap4 message
    if (op == 383013829) {
        var msg = in_msg~$SetIntMap4$_load();
        self~$MapTestContract$_internal_binary_SetIntMap4(msg);
        return (self, true);
    }
    
    ;; Receive SetIntMap5 message
    if (op == 2809746751) {
        var msg = in_msg~$SetIntMap5$_load();
        self~$MapTestContract$_internal_binary_SetIntMap5(msg);
        return (self, true);
    }
    
    ;; Receive SetAddrMap1 message
    if (op == 1749966413) {
        var msg = in_msg~$SetAddrMap1$_load();
        self~$MapTestContract$_internal_binary_SetAddrMap1(msg);
        return (self, true);
    }
    
    ;; Receive SetAddrMap2 message
    if (op == 624157584) {
        var msg = in_msg~$SetAddrMap2$_load();
        self~$MapTestContract$_internal_binary_SetAddrMap2(msg);
        return (self, true);
    }
    
    ;; Receive SetAddrMap3 message
    if (op == 4276365062) {
        var msg = in_msg~$SetAddrMap3$_load();
        self~$MapTestContract$_internal_binary_SetAddrMap3(msg);
        return (self, true);
    }
    
    ;; Receive SetAddrMap4 message
    if (op == 1683777913) {
        var msg = in_msg~$SetAddrMap4$_load();
        self~$MapTestContract$_internal_binary_SetAddrMap4(msg);
        return (self, true);
    }
    
    ;; Receive SetAddrMap5 message
    if (op == 1741376771) {
        var msg = in_msg~$SetAddrMap5$_load();
        self~$MapTestContract$_internal_binary_SetAddrMap5(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "reset" message
        if (text_op == 0x4aedba9b6dfe7cb8e0f95d1230cb0ac70b4bbbe6a3e991ae767cd363573daf1b) {
            self~$MapTestContract$_internal_text_4aedba9b6dfe7cb8e0f95d1230cb0ac70b4bbbe6a3e991ae767cd363573daf1b();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $MapTestContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$MapTestContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    $MapTestContract$_contract_store(self);
}
