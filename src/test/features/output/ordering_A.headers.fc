;;
;; Header files for A
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $A$_store
builder $A$_store(builder build_0, (slice) v) inline;

;; $A$_load
(slice, ((slice))) $A$_load(slice sc_0) inline;

;; $S$_to_external
(int, int, int) $S$_to_external(((int, int, int)) v) inline;

;; $A$init$_load
(slice, ((slice))) $A$init$_load(slice sc_0) inline;

;; $A$_contract_init
(slice) $A$_contract_init(slice $owner) impure inline_ref;

;; $A$_contract_load
(slice) $A$_contract_load() impure inline_ref;

;; $A$_contract_store
() $A$_contract_store((slice) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $global_reply
() $global_reply(cell $body) impure inline;

;; $Int$_fun_inc
(int, int) $Int$_fun_inc(int $self) impure inline_ref;

;; $S$_constructor_v3_v2_v1
((int, int, int)) $S$_constructor_v3_v2_v1(int v3, int v2, int v1) inline;

;; $A$_fun_create
((slice), (int, int, int)) $A$_fun_create((slice) $self, int $v) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
